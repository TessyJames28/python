# Interactive test cases for 7-base_geometry.py

# Check that module exists
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Check for docstring
>>> doc = __import__('7-base_geometry').__doc__
>>> len(doc) > 1
True

# Check for class documentation
>>> len(BaseGeometry.__doc__) > 1
True

# Check for area() method docstring
>>> len(BaseGeometry.area.__doc__) > 1
True

# Check for integer_validator() documentation
>>> len(BaseGeometry.integer_validator.__doc__) > 1
True

# Check that area() raises Exeception
>>> bg = BaseGeometry()
>>> try:
...     print(bg.area())
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[Exception] area() is not implemented

# Check that integer_validator() raise a TypeError for non int
>>> try:
...     bg.integer_validator("place", "Florida")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] place must be an integer

# Check that integer_validator() raises ValueError for int == 0
>>> try:
...     bg.integer_validator("amount", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] amount must be greater than 0

# Check that integer_validator raise ValueError for negative value
>>> try:
...     bg.integer_validator("temperature", -42)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] temperature must be greater than 0